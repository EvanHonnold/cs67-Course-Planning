{"department":"COSC","classes":[{"title":"Intro Programming&Computatn","number":"001","instructor":"Thomas Cormen","distrib":"TLA","description":"This course introduces computational concepts that are fundamental to computer science and are useful for the sciences, social sciences, engineering, and digital arts. Students will write their own interactive programs to analyze data, process text, draw graphics, manipulate images, and simulate physical systems. Problem decomposition, program efficiency, and good programming style are emphasized throughout the course. No prior programming experience is assumed."},{"title":"Intro Computationl Neurosci","number":"016","instructor":"Richard Granger","distrib":"SCI","description":"Your brain is composed of low-precision, slow, sparsely-connected computing elements, yet it outperforms any extant computer on tasks ranging from perception to planning. Computational Neuroscience has as its twin goals the scientific understanding of how brains compute thought, and the engineering capability to reconstruct the identified computations. Topics in the class included anatomical circuit design, physiological operating rules, evolutionary derivation, mathematical analyses, and emergent behavior, as well as development of applications from robotics to medicine."},{"title":"ProbSolving:Object-Oriented","number":"010","instructor":"Timothy Pierson","distrib":"TLA","description":"Motivated by problems that arise in a variety of disciplines, this course examines concepts and develops skills in solving computational problems. Topics covered include abstraction (how to hide details), modularity (how to decompose problems), data structures (how to efficiently organize data), and algorithms (procedures for solving problems). Laboratory assignments are implemented using object-oriented programming techniques."},{"title":"Computer Animation","number":"024","instructor":"Patricia Hannaway","distrib":"ART","description":"This hands-on course focuses on state-of-the-art computer animation, presenting techniques for traditional animation and how they apply to 3D computer animation, motion capture, and dynamic simulations. Facial and full-body animation are covered through projects, readings, and presentations, including physical simulation, procedural methods, image-based rendering, and machine-learning techniques. Students will create short animations. This course focuses on methods, ideas, and practical applications, rather than on mathematics."},{"title":"Adv Projects in Digital Art","number":"028","instructor":"Lorie Loeb","distrib":" ","description":"This independent study course is for students who have completed all the courses in the Digital Arts minor and want to continue working on projects in digital arts. Projects may include computer animations, interactive digital arts, installations, or research projects. Students work alone or in teams. This course may be taken at most twice."},{"title":"Topics in Digital Arts","number":"029","instructor":"Patricia Hannaway","distrib":" ","description":"This course studies an advanced topic in Digital Arts that is not covered in the regular curriculum. Students may take this course multiple times, subject to the restriction that the topics are distinct."},{"title":"Algorithms","number":"031","instructor":"Prasad Jayanti","distrib":"QDS","description":"A survey of fundamental algorithms and algorithmic techniques, including divide-and-conquer algorithms, lower bounds, dynamic programming, greedy algorithms, amortized analysis, and graph algorithms. Presentation, implementation and formal analysis, including space/time complexity and proofs of correctness, are all emphasized."},{"title":"Topics: Algorithm&Complexity","number":"049","instructor":"Peter Winkler","distrib":"QDS","description":"This course studies an advanced topic in algorithms and complexity that is not covered in the regular curriculum.  Students may take this course multiple times, subject to the restriction that the topics are distinct.  "},{"title":"Approximation Algorithms","number":"49.06","instructor":"Deeparnab Chakrabarty","distrib":"QDS","description":"Many problems arising in computer science are NP-hard and therefore we do not expect polynomial time algorithms solving them exactly. This has led to the study of approximation algorithms where one relaxes the goal to return approximate solutions. Over the past three decades, a beautiful theory of approximation algorithms has emerged. This course will provide a broad overview of the main techniques and will often deep dive into the state-of-the-art."},{"title":"Software Design&Implement'n","number":"050","instructor":"Xia Zhou","distrib":"TLA","description":"Techniques for building large, reliable, maintainable, and understandable software systems. Topics include UNIX tools and filters, programming in C, software testing, debugging, and teamwork in software development. Concepts are reinforced through a small number of medium-scale programs and one team programming project."},{"title":"Digital Electronics","number":"056","instructor":"Geoffrey Luke, Eric Hansen","distrib":"TLA","description":"This course teaches classical switching theory including Boolean algebra, logic minimization, algorithmic state machine abstractions, and synchronous system design. This theory is then applied to digital electronic design. Techniques of logic implementation, from Small Scale Integration (SSI) through Application-Specific Integrated Circuits (ASICs), are encountered. There are weekly laboratory exercises for the first part of the course followed by a digital design project in which the student designs and builds a large system of his or her choice. In the process, Computer-Aided Design (CAD) and construction techniques for digital systems are learned."},{"title":"Computer Networks","number":"060","instructor":"Sergey Bratus","distrib":"TAS","description":"This course focuses on the communications protocols used in computer networks: their functionality, specification, verification, implementation, and performance; and how protocols work together to provide more complex services. Aspects of network architectures are also considered. Laboratory projects are an integral part of the course in which networking concepts are explored in depth."},{"title":"Human-Computer Interaction","number":"067","instructor":"Xing-Dong Yang","distrib":"TAS","description":"This course provides the fundamentals of human-computer interaction, including human factors, usability, user-centered design, prototyping, and usability evaluation. Students will learn the skills and knowledge to identify users’ needs and limitations through observations and interviews. They will experience rapid prototyping and will learn common HCI evaluation techniques, such as qualitative and quantitative methods, to evaluate their designs and implementations. Additionally, students will be exposed to the state-of-the-art research within HCI. "},{"title":"Programming Parallel Systms","number":"063","instructor":"Stephen Taylor","distrib":"TLA","description":"Multi-core processors are now ubiquitous in most personal computers. These are the fundamental computer-engineering building blocks for high-performance servers, blade farms, and cloud computing. In order to utilize these devices in large systems they must be interconnected through networking and collectively programmed. This hands-on system-engineering course offers students the opportunity to explore problem-solving techniques on a high-performance multi-computer containing quad-core processors. The course involves weekly programming laboratories that teach POSIX thread, UDP and TCP network, and MPI style programming techniques. These techniques are explored in the context of scalable problem solving methods applied to typical problems in science and engineering ranging from client-server sensing and data repositories, to numerical methods, gaming and decision support. All laboratories will be conducted in the C programming language and proficiency in C is required. Enrollment is limited to 30 students."},{"title":"Machine Lrng&Stat Analysis","number":"074","instructor":"Qiang Liu","distrib":"QDS","description":"This course provides an introduction to statistical modeling and machine learning. Topics include learning theory, supervised and unsupervised machine learning, statistical inference and prediction, and data mining. Applications of these techniques to a wide variety of data sets will be described."},{"title":"Rendering Algorithms","number":"087","instructor":"Wojciech Jarosz","distrib":"TAS","description":"This course is designed for graduate and upper-level undergraduate students interested in obtaining an in-depth understanding of physically based rendering. Students will learn about the principles of how light interacts with a scene and how to translate the associated image formation problem into efficient rendering algorithms. Since this is an upper-level course, a focus is placed on state-of-the-art techniques and recent trends in research. By the end of the quarter, students will understand, and know how to      im­plement, many of the core algorithms used for rendering visual effects and 3D animated films."}]}